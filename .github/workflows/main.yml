name: Build Workflow
on:
  push:
#    branches: master

jobs:
  build-windows:
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.11.9'
          architecture: 'x64'
      - name: Install requirements
        run: |
          pip install -r requirements.txt
      - name: Install Build Environment Prerequisites
        run: |
          pip install pyinstaller
          pip install cryptography
          pip install pillow
      - name: Run PyInstaller
        run: |
          python -m PyInstaller gui.spec
      - uses: actions/upload-artifact@v4
        with:
          #name: Windows_gui_exe
          #path: dist/gui.exe
          path: dist/*

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1

      - name: Install WiX
        run: dotnet tool install --global wix

      - name: Build MSI Package
        run: |
           candle .github/workflows/LicenseAgreementDlg_HK.wxs .github/workflows/WixUI_HK.wxs .github/workflows/product.wxs
           light -ext WixUIExtension -ext WixUtilExtension -sacl -spdb  -out ./GKFlasher.msi ./LicenseAgreementDlg_HK.wixobj ./WixUI_HK.wixobj ./product.wixobj

#      - name: Build Windows Installer MSI from exe file
#        uses: AliceOh/CreateWindowsInstaller@1.0.0
#        with:
#          exefile: 'gui.exe'

      - name: Upload MSI for Windows to release page
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "test"
          prerelease: true
          title: "Windows Development Build"
          files: |
            GKFlasher.msi

#
#      - name: create release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.event.head_commit.message }}
#          release_name: ${{ github.event.head_commit.message }}
#          overwrite: true
#          body: |
#            Test Release v1.0.0
#          draft: false
#          prerelease: false
#      - name: Upload Release Asset
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{steps.create_release.outputs.upload_url}}
#          asset_path: dist/test.exe
#          asset_name: GKFlasher-GUI-Windows-amd64.exe
#          asset_content_type: application/zip
